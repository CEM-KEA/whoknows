http {
    # Define log format
    log_format response_status '$status';
}

# Special server block for metrics - no SSL, no redirects
server {
    listen 81;
    server_name localhost;

    location = /nginx_status {
        stub_status on;
        allow 172.18.0.0/16;  # Docker network range
        allow 127.0.0.1;      # localhost
        deny all;             # Deny all other
        access_log /var/log/nginx/access.log response_status;
    }
}

# Redirect HTTP to HTTPS
server {
    listen 80;
    server_name cemdev.dk www.cemdev.dk;

    return 301 https://$host$request_uri;
}

# Redirect HTTP requests to the IP address to the domain
server {
    listen 80;
    server_name 52.169.32.176;
    return 301 https://cemdev.dk$request_uri;
}

# Redirect HTTPS requests to the IP address to the domain
server {
    listen 443 ssl;
    server_name 52.169.32.176;

    # Use the SSL certificate (necessary for HTTPS redirection)
    ssl_certificate /etc/letsencrypt/live/cemdev.dk/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/cemdev.dk/privkey.pem;

    # Redirect to the domain
    return 301 https://cemdev.dk$request_uri;
}

 #HTTPS server block
 server {
    listen 443 ssl;
    server_name cemdev.dk www.cemdev.dk;

    # SSL certificate paths
    ssl_certificate /etc/letsencrypt/live/cemdev.dk/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/cemdev.dk/privkey.pem;

    # Proxy to the frontend container
    location / {
        proxy_pass http://frontend:80;  # Route root requests to the frontend container
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Proxy API requests to the backend container
    location /api/ {
        proxy_pass http://backend:8080/api/;  # Route /api requests to the backend container
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Proxy Prometheus metrics from the backend
    location /api/probe {
        proxy_pass http://backend:9090/api/probe; # Route Prometheus metrics
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}