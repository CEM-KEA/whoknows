# Define a JSON log format for structured logging
log_format json_combined escape=json
  '{'
    '"time":"$time_iso8601",'
    '"remote_addr":"$remote_addr",'
    '"request_uri":"$request_uri",'
    '"request_method":"$request_method",'
    '"status":"$status",'
    '"body_bytes_sent":"$body_bytes_sent",'
    '"http_user_agent":"$http_user_agent",'
    '"http_referer":"$http_referer"'
  '}';

access_log /dev/stdout json_combined;

# Redirect HTTP to HTTPS
server {
    listen 80;
    server_name cemdev.dk www.cemdev.dk;

    return 301 https://$host$request_uri;
}

# Redirect HTTP requests to the IP address to the domain
server {
    listen 80;
    server_name 52.169.32.176;
    return 301 https://cemdev.dk$request_uri;
}

# Redirect HTTPS requests to the IP address to the domain
server {
    listen 443 ssl;
    server_name 52.169.32.176;

    # Use the SSL certificate (necessary for HTTPS redirection)
    ssl_certificate /etc/letsencrypt/live/cemdev.dk/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/cemdev.dk/privkey.pem;

    # Redirect to the domain
    return 301 https://cemdev.dk$request_uri;
}

 #HTTPS server block
 server {
    listen 443 ssl;
    server_name cemdev.dk www.cemdev.dk;

    # SSL certificate paths
    ssl_certificate /etc/letsencrypt/live/cemdev.dk/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/cemdev.dk/privkey.pem;

    # Proxy to the frontend container
    location / {
        proxy_pass http://frontend:80;  # Route root requests to the frontend container
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Proxy API requests to the backend container
    location /api/ {
        proxy_pass http://backend:8080/api/;  # Route /api requests to the backend container
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Proxy Prometheus metrics from the backend
    location /api/probe {
        proxy_pass http://backend:9090/api/probe; # Route Prometheus metrics
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}