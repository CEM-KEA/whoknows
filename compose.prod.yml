volumes:
  postgres_data:
    external: true
  promtail_positions:

networks:
  CEM-KEA:
    driver: bridge

services:
  backend:
    container_name: backend
    image: ghcr.io/cem-kea/whoknows/backend:${BACKEND_VERSION}
    restart: always
    ports:
      - "8080:8080"
    environment:
      - API_SERVER_PORT=8080
      - API_DATABASE_HOST=db
      - API_DATABASE_PORT=5432
      - API_DATABASE_USER=${API_DATABASE_USER}
      - API_DATABASE_PASSWORD=${API_DATABASE_PASSWORD}
      - API_DATABASE_NAME=${API_DATABASE_NAME}
      - API_DATABASE_SSL_MODE=${API_DATABASE_SSL_MODE}
      - API_DATABASE_MIGRATE=${API_DATABASE_MIGRATE}
      - API_JWT_SECRET=${API_JWT_SECRET}
      - API_JWT_EXPIRATION=${API_JWT_EXPIRATION}
      - API_ENVIRONMENT=production
      - API_PAGINATION_LIMIT=${API_PAGINATION_LIMIT}
      - API_PAGINATION_OFFSET=${API_PAGINATION_OFFSET}
      - API_LOG_LEVEL=${API_LOG_LEVEL}
      - API_LOG_FORMAT=${API_LOG_FORMAT}
      - API_WEATHER_API_KEY=${API_WEATHER_API_KEY}
    volumes:
      - ./logs/backend.log:/var/log/backend.log
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - CEM-KEA
    depends_on:
      - db

  frontend:
    container_name: frontend
    image: ghcr.io/cem-kea/whoknows/frontend:${FRONTEND_VERSION}
    restart: always
    ports:
      - "3000:80"
    environment:
      - VITE_API_URL=${VITE_API_URL}
    networks:
      - CEM-KEA

  db:
    container_name: db
    image: postgres:15-alpine
    restart: always
    environment:
      - POSTGRES_DB=${API_DATABASE_NAME}
      - POSTGRES_USER=${API_DATABASE_USER}
      - POSTGRES_PASSWORD=${API_DATABASE_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - CEM-KEA
    ports:
      - "5432:5432"

  nginx:
    container_name: nginx
    image: nginx:alpine
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - /etc/letsencrypt:/etc/letsencrypt
    depends_on:
      - frontend
      - backend
    networks:
      - CEM-KEA

  postgres_exporter:
    container_name: postgres_exporter
    image: prometheuscommunity/postgres-exporter:latest
    restart: always
    ports:
      - "9187:9187"
    environment:
      - DATA_SOURCE_NAME=postgresql://${API_DATABASE_USER}:${API_DATABASE_PASSWORD}@db:5432/${API_DATABASE_NAME}?sslmode=disable
    depends_on:
      - db
    networks:
      - CEM-KEA

  promtail:
    container_name: promtail
    image: grafana/promtail:latest
    restart: always
    volumes:
      - ./promtail-config.yaml:/etc/promtail/config.yaml
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/log/nginx:/var/log/nginx
      - promtail_positions:/var/log/positions
    command:
      - -config.expand-env=true 
      - -config.file=/etc/promtail/config.yaml
    networks:
      - CEM-KEA

  cadvisor:
    container_name: cadvisor
    image: gcr.io/cadvisor/cadvisor:latest
    restart: always
    ports:
      - "8081:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - CEM-KEA

  node_exporter:
    container_name: node_exporter
    image: prom/node-exporter:latest
    restart: always
    ports:
      - "9100:9100"
    networks:
      - CEM-KEA

  nginx_exporter:
    container_name: nginx_exporter
    image: nginx/nginx-prometheus-exporter:latest
    restart: always
    ports:
      - "9113:9113"
    environment:
      - NGINX_STATUS_URL=http://nginx/nginx_status
    depends_on:
      - nginx
    networks:
      - CEM-KEA