name: Build and Deploy

on:
  push:
    branches:
      - release/[0-9]+.[0-9]+
  pull_request:
    branches:
      - release/[0-9]+.[0-9]+

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

    - name: Build and tag Docker images
      env: 
        API_SERVER_PORT: ${{ secrets.API_SERVER_PORT }}
        API_DATABASE_FILE_PATH: ${{ secrets.API_DATABASE_FILE_PATH }}
        API_DATABASE_MIGRATE: ${{ secrets.API_DATABASE_MIGRATE }}
        API_DATABASE_SEED: ${{ secrets.API_DATABASE_SEED }}
        API_DATABASE_SEED_FILE_PATH: ${{ secrets.API_DATABASE_SEED_FILE_PATH }}
        API_JWT_SECRET: ${{ secrets.API_JWT_SECRET }}
        API_JWT_EXPIRATION: ${{ secrets.API_JWT_EXPIRATION }}
        API_APP_ENVIRONMENT: ${{ secrets.API_APP_ENVIRONMENT }}
        API_PAGINATION_LIMIT: ${{ secrets.API_PAGINATION_LIMIT }}
        API_PAGINATION_OFFSET: ${{ secrets.API_PAGINATION_OFFSET }}
        API_LOG_LEVEL: ${{ secrets.API_LOG_LEVEL }}
        API_LOG_FORMAT: ${{ secrets.API_LOG_FORMAT }}
        VITE_API_URL: ${{ secrets.VITE_API_URL }}
      run: |
        # Replace / with - in the branch name for valid Docker tags
        BRANCH_TAG=$(echo "${GITHUB_REF_NAME}" | sed 's/\//-/g')
        
        # Build the backend and frontend images using Docker Compose
        docker compose -f ./compose.yml build backend
        docker compose -f ./compose.yml build frontend
        
        # Tag the images correctly to match the Docker Hub repositories
        docker tag whoknows-backend ${{ secrets.DOCKER_HUB_USERNAME }}/whoknows-backend:${BRANCH_TAG}
        docker tag whoknows-frontend ${{ secrets.DOCKER_HUB_USERNAME }}/whoknows-frontend:${BRANCH_TAG}

    - name: Push Docker images to Docker Hub
      run: |
        docker push ${{ secrets.DOCKER_HUB_USERNAME }}/whoknows-backend:${BRANCH_TAG}
        docker push ${{ secrets.DOCKER_HUB_USERNAME }}/whoknows-frontend:${BRANCH_TAG}


  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
    - name: Set up SSH
      uses: webfactory/ssh-agent@v0.9.0
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Deploy to Azure VM
      run: |
        ssh -o StrictHostKeyChecking=no ${{ secrets.AZURE_VM_USER }}@${{ secrets.AZURE_VM_IP }} << 'EOF'
          cd /home/azureuser
          if [ ! -d "myapp" ]; then
            git clone https://github.com/yourusername/yourrepo.git myapp
          else
            cd myapp
            git pull origin main
          fi
          cd myapp
          docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} -p ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
          docker-compose pull
          docker-compose up -d
        EOF
